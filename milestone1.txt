This is Qiang Tong from Bia-660 web programming course, I am writing to let you know what we have done about the mid-term these couple of days.
The github web page of our source code: https://github.com/MichaelTQ/bia660_midterm

First let me show what've we got so far:
Inline image 1 
This is the result window generated using matplotlib about the number of tweets about iOS4/5/6/7 at their official release time.
Source code: https://github.com/MichaelTQ/bia660_midterm/blob/master/py_code/visualization_test.py

Let me explain how we managed to achieve that:

First, instead of using twitter.com to search tweets, we decided to use topsy.com, which I have mentioned to you last class. Because it has "page" information in its searching URL:
for example, http://topsy.com/s?q=%22iOS%204%22&type=tweet&sort=-date&language=en&offset=00&mintime=1276646411&maxtime=1276732811
This URL searched "iOS 4" on page 1(offset = 00), between 2010-6-16 (1276646411) and 2010-6-17 (1276732811) in newest first order (sort=-date).
But if you use urllib.openurl() to analyze this url, all the tweets were generated by javascript. So we decided to use "selenium" to capture the "javascript generated" HTML and parse it with BeautifulSoup.
The "selenium" is like a recording tool of web pages. It will open Firefox browser, go to the URL and capture all the generated HTML code about tweets we need in this URL instead of the javascript codes.
Source code: https://github.com/MichaelTQ/bia660_midterm/blob/master/py_code/selenium_search.py

Second, we created a mysql database, created some silly tables to restore some information of the tweets we get from the website.
The sql query to create the tables is like:
create table if not exists ios_four_tweets
(
	usr_id varchar(255),
	usr_name varchar(255),
	usr_url varchar(255),
	tw_content varchar(255),
	tw_url varchar(255) primary key,
	tw_time datetime
);
As you can see we saved user_id, user_name, user_url, tweet_content, etc...
You can manipulate database using queries in https://github.com/MichaelTQ/bia660_midterm/blob/master/pymysql_DB/table_management.sql
We've already got some data in each table, about 500~800 rows in each table of different iOS.
And we also made a backup: https://github.com/MichaelTQ/bia660_midterm/blob/master/pymysql_DB/backup.sql
You can easily restore the data from the above file.
Source code about this part is also: https://github.com/MichaelTQ/bia660_midterm/blob/master/py_code/selenium_search.py


The third part is about analyze the data we got. Get the positive or negative attitude of those tweets.
The way to do this is basically get a lot of words about positive / negative attitude. Save the words and check if the tweets have those words.
Then we save the positive or negative tweets into lists and the length of the lists is the data we want.
The following output is the statistic result we got so far:
iOS 4:
Positive:  238 / 813 	29.27429 %
Negative:  172 / 813 	21.15621 %
Positive / Negative:	1.38372
====================================
iOS 5:
Positive:  220 / 743 	29.60969 %
Negative:  151 / 743 	20.32301 %
Positive / Negative:	1.45695
====================================
iOS 6:
Positive:  196 / 622 	31.51125 %
Negative:  135 / 622 	21.70418 %
Positive / Negative:	1.45185
====================================
iOS 7:
Positive:  174 / 554 	31.40794 %
Negative:  133 / 554 	24.00722 %
Positive / Negative:	1.30827
Source code: https://github.com/MichaelTQ/bia660_midterm/blob/master/py_code/check_attitude.py


The final part is the visualization:
Now we are using matplotlib, the one professor used in class. I found some examples on their website and managed to make that graph on the top of this email.
I think it will be great if we make more graphs using matplotlib or other tools to make our data more persuasive.
Source code: https://github.com/MichaelTQ/bia660_midterm/blob/master/py_code/visualization_test.py


That's all we have done so far. Basically, we kind of have solved the "Which one is more popular? iOS4/5/6/7" problem. Now we are gonna to move on to the other questions.
And then make a powerpoint of what we have done and prepare for the presentation next Tuesday.
Please let me know if there is any problem.
Thanks.


PS: All of our jobs are done using Mac, so if you run some of those codes in github, it might be buggy.
